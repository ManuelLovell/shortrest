import{O as s,C as i}from"./bsConstants-cgXdYAIG.js";import{$ as S}from"./blockrain.jquery-DqERG-6C.js";document.querySelector("#pauseScreen").innerHTML=`
<div id="gameFlexBox">
    <div class="header">Taking a break..</div>
    <div class="wrapper">
        <div id="breakMessage" class="break-message" style="display:none;"></div>
    </div>
    <div id="breakTimer"></div>
    <div id="attendanceBox">
        <ul id="playerList"></ul>
    </div>
    <div id="blockGameContainer" class="block-game"></div>
</div>
`;let l,c=!1,d;const r=document.getElementById("playerList"),m=document.getElementById("breakTimer"),f=document.getElementById("breakMessage");s.onReady(async()=>{l=await s.player.getId();const y=await s.room.getMetadata(),E=y[`${i.EXTENSIONID}/game`],g=y[`${i.EXTENSIONID}/time`],o=document.createElement("li");o.id=`pl_${l}`,o.classList.add("self-list-item"),o.innerText="Click when ready!",r.appendChild(o),d=await s.party.getPlayers(),u(),s.party.onChange(e=>{d=e,u()}),o.onclick=async e=>{e.preventDefault(),c=!c,o.style.backgroundImage=c?"url(/check.svg)":"url(/cross.svg)",o.innerText=c?"Click to un-ready":"Click when ready!",await s.broadcast.sendMessage(i.TRANSPORT,c?i.READY:i.BUSY)},s.broadcast.onMessage(i.TRANSPORT,async e=>{const t=e.connectionId,a=d.find(n=>n.connectionId===t);if(a){const n=`pl_${a.id}`,I=document.getElementById(n);I&&(I.style.backgroundImage=e.data===i.READY?"url(/check.svg)":"url(/cross.svg)")}}),s.broadcast.onMessage(i.SCORE,async e=>{const t=`con_${e.connectionId}`,a=document.getElementById(t);a&&(a.innerText=`Score: ${e.data}`)}),s.broadcast.onMessage(i.MESSAGE,async e=>{e.data&&(f.innerText=e.data,f.style.display="block")});function u(){const e=r.querySelectorAll("li");for(const t of e){const a=t.id.split("_")[1];d.some(n=>n.id===a)||a!==l&&t.remove()}for(const t of d)if(!document.getElementById(`pl_${t.id}`)){const n=document.createElement("li");n.id=`pl_${t.id}`,n.classList.add("player-list-item"),n.innerHTML=`${t.name} <div id="con_${t.connectionId}"></div>`,r.appendChild(n)}}function T(e){let t=e*60;p(t);const a=setInterval(()=>{t--,t<=0?(clearInterval(a),m.innerText="Time is up!"):p(t)},1e3)}function p(e){const t=Math.floor(e/60),a=e%60,n=`${String(t).padStart(2,"0")}:${String(a).padStart(2,"0")}`;m.innerText=n}g>0?T(g):m.style.display="none",E?S(".block-game").blockrain({autoplay:!1,autoplayRestart:!1,theme:"candy",playText:"Pass some time during the break?",playButtonText:"Play",gameOverText:"Game Over",restartButtonText:"Play Again",scoreText:"Score",onStart:async function(){await s.broadcast.sendMessage(i.SCORE,0)},onRestart:function(){},onLine:async function(e,t,a){await s.broadcast.sendMessage(i.SCORE,a)}}):document.getElementById("blockGameContainer").style.display="none"});
